{
    "main": {
      "prefix": "main",
      "description": "Insert a main function, used as an entry point.",
      "body": ["void main(List<String> args) {", "  $0", "}"]
    },
    "try": {
      "prefix": "try",
      "description": "Insert a try/catch block.",
      "body": ["try {", "  $0", "} catch (${1:e}) {", "}"]
    },
    "if": {
      "prefix": "if",
      "description": "Insert an if statement.",
      "body": ["if ($1) {", "  $0", "}"]
    },
    "if else": {
      "prefix": "ife",
      "description": "Insert an if statement with an else block.",
      "body": ["if ($1) {", "  $0", "} else {", "}"]
    },
    "switch case": {
      "prefix": "switch",
      "description": "Insert a switch statement.",
      "body": [
        "switch ($1) {",
        "  case $2:",
        "    $0",
        "    break;",
        "  default:",
        "}"
      ]
    },
    "for": {
      "prefix": "for",
      "description": "Insert a for loop.",
      "body": ["for (var i = 0; i < ${1:count}; i++) {", "  $0", "}"]
    },
    "for in": {
      "prefix": "fori",
      "description": "Insert a for-in loop.",
      "body": ["for (var ${1:item} in ${2:items}) {", "  $0", "}"]
    },
    "while": {
      "prefix": "while",
      "description": "Insert a while loop.",
      "body": ["while ($1) {", "  $0", "}"]
    },
    "do while": {
      "prefix": "do",
      "description": "Insert a do-while loop.",
      "body": ["do {", "  $0", "} while ($1);"]
    },
    "fun": {
      "prefix": "fun",
      "description": "Insert a function definition.",
      "body": ["${3:void} ${1:name}(${2:args}) {", "  $0", "}"]
    },
    "class": {
      "prefix": "class",
      "description": "Insert a class definition.",
      "body": ["class ${1:Name} {", "  $0", "}"]
    },
    "typedef": {
      "prefix": "typedef",
      "description": "Insert a typedef.",
      "body": "typedef ${1:Type} ${2:Name}(${3:params});"
    },
    "test": {
      "prefix": "test",
      "description": "Insert a test block.",
      "body": ["test('$1', () {", "  $0", "});"]
    },
    "group": {
      "prefix": "group",
      "description": "Insert a test group block.",
      "body": ["group('$1', () {", "  $0", "});"]
    },
    "enum": {
      "prefix": "enum",
      "description": "Insert a enum.",
      "body": ["enum ${1:Name} {", "  $0", "}"]
    },
    "HiveType class extends HiveObject": {
    "prefix": "hive",
    "body": [
      "import 'package:hive/hive.dart';",
      "",
      "part '${TM_FILENAME_BASE}.g.dart';",
      "",
      "@HiveType()",
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} extends HiveObject {",
      "\t@HiveField(0)",
      "\tString id;",
      "\t${0:// Hive fields go here}",
      "}"
    ],
    "description": "Creates an HiveType class extending HiveObject structure based on the filename."
  },
  "HiveType class": {
    "prefix": "hivc",
    "body": [
      "import 'package:hive/hive.dart';",
      "",
      "part '${TM_FILENAME_BASE}.g.dart';",
      "",
      "@HiveType()",
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} {",
      "\t@HiveField(0)",
      "\tString id;",
      "\t${0:// Hive fields go here}",
      "}"
    ],
    "description": "Creates an HiveType class structure based on the filename."
  },
  "@HiveField(#)": {
    "prefix": "hf",
    "body": [
      "@HiveField(${1})",
      "${2};",
      "${0}"
    ],
    "description": "Creates @HiveField({number})"
  },
  "@HiveType()": {
    "prefix": "ht",
    "body": [
      "@HiveType()",
      "${0}"
    ],
    "description": "Creates @HiveType()"
  },
  "@HiveField(#) String": {
    "prefix": "hfs",
    "body": [
      "@HiveField(${1})",
      "String ${2};",
      "${0}"
    ],
    "description": "Creates @HiveField({number}) String"
  },
  "@HiveField(#) int": {
    "prefix": "hfi",
    "body": [
      "@HiveField(${1})",
      "int ${2};",
      "${0}"
    ],
    "description": "Creates @HiveField({number}) int"
  },
  "@HiveField(#) bool": {
    "prefix": "hfb",
    "body": [
      "@HiveField(${1})",
      "bool ${2};",
      "${0}"
    ],
    "description": "Creates @HiveField({number}) bool"
  },
  "@HiveField(#) List": {
    "prefix": "hfl",
    "body": [
      "@HiveField(${1})",
      "List<${2}> ${3};",
      "${0}"
    ],
    "description": "Creates @HiveField({number}) List<>"
  },
  "@HiveField(#) double": {
    "prefix": "hfd",
    "body": [
      "@HiveField(${1})",
      "double ${2};",
      "${0}"
    ],
    "description": "Creates @HiveField({number}) double"
  }
}
